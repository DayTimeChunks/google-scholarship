{"version":3,"sources":["images/powered-by-foursquare-grey.png","components/MapPromise.js","utils/keys.js","utils/FoursquareAPI.js","components/SearchField.js","components/TapasList.js","components/FilterButton.js","components/FilterLength.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","markers","secret","id","mapAPIkey","getSearch","loc","myHeaders","Headers","myInit","method","headers","mode","cache","append","fetch","concat","lat","lng","then","res","ok","json","Error","status","getPhotos","idArr","fetchArray","map","idPhoto","Promise","all","respArr","response","getQuery","query","match","RegExp","escapeRegExp","api","SearchField","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateQuery","e","setState","target","value","onKeyPress","key","searchApi","state","FoursquareAPI","location","jsonRes","update","venues","catch","err","alert","message","_this2","react_default","a","createElement","className","type","onChange","event","placeholder","aria-label","src","require","height","alt","Component","TapasList","getVenuePhoto","tapa","photos","photo_res","length","prefix","suffix","getVenueIcon","categories","icon","isRecommended","tapas","recommend","referralId","onClick","handleSelection","bind","assertThisInitialized","data-id","venue","tabIndex","name","width","address","reasons","items","summary","onCheckedId","currentTarget","dataset","MapPromise","fetchGoogleMaps","populateInfoWindow","marker","infoWindow","setAnimation","window","google","maps","Animation","BOUNCE","setTimeout","setIcon","mIcon","setContent","title","category","open","selections","document","getElementsByClassName","Array","prototype","el","classList","remove","getElementById","add","addListener","handleInfoClose","openMarker","mapIsReady","center","googleMapsPromise","resolve","reject","resolveGoogleMapsPromise","script","async","defer","onerror","error","body","appendChild","_this$props","_this$state","bounds","LatLngBounds","Marker","position","extend","_this3","getGoogleMaps","Map","zoom","mapTypeControl","InfoWindow","obj","mapIsRead","reason","checkedId","_this$state2","close","setMap","addMapMarkers","i","style","FilterButton","chooseNumber","nr","evt","preventDefault","onNumberUpdate","FilterLength","loadButtons","buttons","expr","components_FilterButton","tapasShown","console","log","data-toggle","aria-haspopup","aria-expanded","App","addPhotos","idArray","temp_tapas","JSON","parse","stringify","jsonResolvedArr","promise","indx","updateRecommendation","updateResults","foundTapas","cleanTapas","cleanSearchResults","cleanShortTapas","shortenResults","showLength","updateTapasShown","shownTapas","slice","filter","test","pluralName","shortName","handleCheck","infoClosed","mapKey","myJson","groups","Route","exact","path","render","components_SearchField","components_FilterLength","components_TapasList","role","components_MapPromise","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","BrowserRouter","src_App_0","URL","process","href","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3674c080.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/powered-by-foursquare-grey.cdd335d8.png\";","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nimport { mapAPIkey } from '../utils/keys'\n\n\n// Global \"markers\" variable is not ideal, but alternative\n// would be to re-mount the Google Maps Api after every new search\n// by changing the component's key value.\nlet markers;\n\n// Sources:\n// https://stackoverflow.com/questions/48493960/using-google-map-in-react-component  (best)\n// https://stackoverflow.com/questions/45429484/how-to-implement-google-maps-js-api-in-react-without-an-external-library\n// https://jsbin.com/tejutihoka/edit?js,output\n\nclass MapPromise extends Component {\n\n  static propTypes = {\n    recommend: PropTypes.bool,\n    tapas: PropTypes.array,\n    checkedId: PropTypes.string,\n    handleInfoClose: PropTypes.func\n  };\n\n  constructor(props){\n    super(props);\n    this.state = {\n      mapIsReady: false,\n      map: \"\",\n      // markers: \"\", // Cannot setState in componentDidUpdate()\n      infoWindow: \"\",\n      center: {lat: 50.121870, lng: 8.689550}\n    };\n  }\n\n  getGoogleMaps() {\n    // If we haven't already defined the promise, define it\n    if (!this.googleMapsPromise) {\n      this.googleMapsPromise = new Promise((resolve, reject) => {\n        // Add a global handler for when the API finishes loading\n        window.resolveGoogleMapsPromise = () => {\n          // Resolve the promise\n          // console.log(\"window.google: \", window.google);\n          resolve(window.google);\n\n          // Tidy up\n          delete window.resolveGoogleMapsPromise;\n        };\n\n        // Load the Google Maps API\n        const script = document.createElement(\"script\");\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${mapAPIkey}&callback=resolveGoogleMapsPromise`;\n        script.async = true;\n        script.defer = true;\n        script.onerror = (error) => reject(error);\n        document.body.appendChild(script);\n      });\n    }\n    // Return a promise for the Google Maps API\n    return this.googleMapsPromise; // the \"google\" object\n  }\n\n  // Ignore. Method for testing alternative approaches (for next version)\n  fetchGoogleMaps = () => {\n    fetch(`https://maps.googleapis.com/maps/api/js?key=${mapAPIkey}`, {})\n      .then( response => { // this would be the \"google\" object\n        if (response.ok){\n          return response;\n        }\n        throw new Error(`My promise error, response: ${response}`);\n      })\n  }\n\n  // checkGoogleError = () => {\n  //   document.addEventListener(\"DOMContentLoaded\", () => {\n  //\n  //   });\n  //   // if (this.state.mapIsReady){\n  //   //   alert(\"Oops. Check Your Google Maps API Key.\")\n  //   // }\n  // }\n\n  // Method used on each marker upon creation or if list item is checked\n  populateInfoWindow = (marker, infoWindow, map) => {\n\n    marker.setAnimation(window.google.maps.Animation.BOUNCE);\n    setTimeout(() => {\n      marker.setAnimation(null);\n    }, 1000);\n\n    marker.setIcon(marker.mIcon);\n\n\n    infoWindow.marker = marker;\n    infoWindow.setContent(\n      `<div class=\"text-center\"><p class=\"mb-1\">${marker.title}</p><small>${marker.category}</small></div>`);\n    infoWindow.open(map, marker);\n\n    // Check that only one element on the venue list is highlighted\n    let selections = document.getElementsByClassName(\"highlight\");\n    if (selections && selections.length > 0) {\n      Array.prototype.map.call(selections, el => el.classList.remove(\"highlight\") );\n    }\n    document.getElementById(marker.id).classList.add(\"highlight\");\n\n    infoWindow.addListener('closeclick', ()=>{\n      marker.setIcon(null);\n      infoWindow.marker = null;\n      this.props.handleInfoClose(marker.id);\n      let openMarker = document.getElementById(marker.id);\n      if (openMarker){ openMarker.classList.remove(\"highlight\"); }\n\n    });\n\n  };\n\n  addMapMarkers() {\n    const {tapas, recommend} = this.props;\n    const {map, infoWindow} = this.state;\n\n    if (window.google){\n      let bounds = new window.google.maps.LatLngBounds();\n\n      // Function returns the markers array (to global scope?)\n      return tapas.map(tapa => {\n        let venue;\n        if (recommend){\n          venue = tapa.venue;\n        } else {\n          venue = tapa;\n        }\n\n        let marker = new window.google.maps.Marker({\n          map: map,\n          position: {lat: venue.location.lat, lng: venue.location.lng},\n          title: venue.name,\n          // animation: google.maps.Animation.DROP,\n          id: venue.id,\n          category: venue.categories[0].name,\n          mIcon: `${venue.categories[0].icon.prefix}bg_32${venue.categories[0].icon.suffix}`\n\n        });\n        marker.addListener('click', () => {\n          if (infoWindow.marker !== marker){\n            this.populateInfoWindow(marker, infoWindow, map);\n          }\n        });\n        bounds.extend(marker.position);\n\n        return marker;\n      });\n    }\n\n  }\n\n  componentWillMount() {\n    // Start Google Maps API loading since we know we'll soon need it\n    // this.getGoogleMaps();\n  }\n\n  componentDidMount() {\n\n    // Once the Google Maps API has finished loading, initialize the map\n    // NOTE: Moved content to componentDidUpdate() because props was still empty at this point.\n    this.getGoogleMaps()\n      .then((google) => {\n        const map = new google.maps.Map(document.getElementById('map'), {\n          zoom: 13,\n          center: this.state.center,\n          mapTypeControl: false\n        });\n\n        let largeInfoWindow = new google.maps.InfoWindow();\n\n        return {map: map, window: largeInfoWindow};\n      })\n      .then(obj => {\n        this.setState({\n          mapIsRead: true,\n          map: obj.map,\n          infoWindow: obj.window\n        })\n      })\n      .catch(reason => {\n        alert(`Error with Google Maps API. Reason: ${reason}`);\n        //\\nAttaching a static map instead...`\n        // let div = document.getElementById(\"map\");\n        // let img = document.createElement(\"img\");\n        // const height = (div.clientHeight ? div.clientHeight : \"600\");\n        // const width = (div.clientWidth ? div.clientWidth: \"800\");\n        //\n        // const center = this.state.center;\n        // const url = `https://maps.googleapis.com/maps/api/staticmap?`;\n        // const c = `center=${center.lat},${center.lng}&zoom=13&size=${height}x${width}&maptype=roadmap`;\n        // const marker1 = `&markers=color:blue%7Clabel:S%7C40.702147,-74.015794`;\n        // const marker2 = `&markers=color:green%7Clabel:G%7C40.711614,-74.012318;`\n        // const marker3 = `&markers=color:red%7Clabel:C%7C40.718217,-73.998284`\n        // const key = `&key=${API}`;\n        //\n        // img.src = url + c + key;\n        // if (div) {\n        //   document.getElementById(\"map\").appendChild(img);\n        // }\n      })\n  }\n\n\n  componentDidUpdate(){\n\n    const {checkedId} = this.props;\n    const {map, infoWindow} = this.state;\n\n    // this.checkGoogleError();\n\n    // Closes info window when list item gets clicked (on un-check)\n    if (infoWindow.marker){\n      infoWindow.close();\n    }\n\n    if (markers){\n      markers.map( marker => {\n        marker.setMap(null)\n      })\n    }\n\n    markers = this.addMapMarkers();\n\n    // Populates marker when list item gets clicked (on-check)\n    if (markers){\n      for (let i = 0; i < markers.length; i++){\n        if (markers[i].id === checkedId){\n          this.populateInfoWindow(markers[i], infoWindow, map);\n        }\n      }\n    }\n\n  }\n\n  // componentDidUpdate(){\n  //   if (this.state.mapIsReady) {\n  //     // Display the map\n  //     this.map = new window.google.maps.Map(document.getElementById('map'), {\n  //       center: {lat: 50.121870, lng: 8.689550},\n  //       zoom: 13,\n  //       mapTypeId: 'roadmap',\n  //       mapTypeControl: false\n  //     });\n  //\n  //     let infoWindow = new window.google.maps.InfoWindow();\n  //\n  //   }\n  // }\n\n  render() {\n    return (\n      <div style={{ height: '88vh', width: '100%' }} >\n        <div id=\"map\" style={{ height: '100%', width: '100%' }}></div>\n      </div>\n    )\n  }\n}\n\nexport default MapPromise;\n\n// {/*<div id=\"map\" style={{width: 400, height: 300}}></div>*/}","\nexport const secret = \"XN3KVA302HH1TJ2P1OPH3WUWKGRXVKMX2NWNPQBTXOZSKPPC\";\nexport const id = \"JX2GROLYRGSEKWBDR5X5MITPUUZAH3NEL5BLKYGTF5RBT5IA\";\n\nexport const mapAPIkey = 'AIzaSyCEhfBMzJxAaTKLtp8GjcVwEZobHckXXis';\n\n\n\n","\nimport escapeRegExp from 'escape-string-regexp'\nimport {secret, id} from './keys'\n\n// Useful documents:\n// https://github.com/foursquare/react-foursquare\n\nconst apiUpToDate = \"20181204\"; // Date I built this app, tells FourSquare to use an api version compatible with this date\nconst limitResponses = \"50\"; // Number of responses (I think maximum is 50)\n\nlet apiUrl = \"https://api.foursquare.com/v2\";\nlet apiFeature = \"/venues\";\n\nexport const getBest = (loc) => {\n  /*\n  Uses the \"explore?\" Foursquare endpoint,\n  which searches only for recommended places.\n  Use the \"search?\" endpoint instead for a wider search.\n\n  To access the results array, the structure is:\n  array:  myJson.response.groups[0].items\n  * */\n\n  const api = \"https://api.foursquare.com/v2/venues/explore?\";\n  const food = \"4d4b7105d754a06374d81259\";\n\n  let myHeaders = new Headers();\n\n  const myInit = {\n    method: 'GET',\n    headers: myHeaders,\n    mode: 'cors',\n    cache: 'default' };\n\n  myHeaders.append(\"Accept-Language\", \"en\");\n\n  return fetch(`${api}client_id=${id}&client_secret=${secret}&v=${apiUpToDate}&limit=${limitResponses}&intent=browse&ll=${loc.lat},${loc.lng}&categoryId=${food}`, myInit)\n    .then((res) => {\n      if (res.ok){\n        return res.json();\n      }\n      throw new Error(`Network response was not OK on getBest() request. Status: ${res.status}`);\n    })\n};\n\nexport const getSearch = (loc) => {\n\n  /*\n  * Returns a wider search than getBest()\n  *\n  * The response is accessed differently, with venues directly returned as array.\n  *   array:  myJson.venues\n  * */\n\n  const api = \"https://api.foursquare.com/v2/venues/search?\";\n  const food = \"4d4b7105d754a06374d81259\";\n\n  let myHeaders = new Headers();\n\n  const myInit = {\n    method: 'GET',\n    headers: myHeaders,\n    mode: 'cors',\n    cache: 'default' };\n\n  myHeaders.append(\"Accept-Language\", \"en\");\n\n  return fetch(`${api}client_id=${id}&client_secret=${secret}&v=${apiUpToDate}&limit=${limitResponses}&intent=browse&ll=${loc.lat},${loc.lng}&radius=2000&categoryId=${food}`, myInit)\n    .then((res) => {\n      if (res.ok){\n        return res.json();\n      }\n      throw new Error(`Network response was not OK on getSearch() request. Status: ${res.status}`);\n    })\n};\n\n\n// Additional query, based on 1st result query,\n// which obtained a set of venue IDs\nexport const getPhotos = (idArr) => {\n  // Construct an array of \"fetch\" requests\n  let fetchArray = idArr.map( idPhoto =>\n    (fetch(`${apiUrl}${apiFeature}/${idPhoto}/photos?client_id=${id}&client_secret=${secret}&v=${apiUpToDate}`)));\n\n  // Fetch all, and wait for all to resolve,\n  // then return an array of responses converted to json()\n  return Promise.all(fetchArray)\n    .then( respArr => {\n      return respArr.map( response => response.json());\n      // jsonResolvedArr: Array of resolved promises\n  });\n};\n\n// Main query method used, returns a list of venues with information\nexport const getQuery = (query, loc) => {\n  const match = new RegExp(escapeRegExp(query), 'i');\n  const food = \"4d4b7105d754a06374d81259\";\n  const api = `https://api.foursquare.com/v2/venues/search?client_id=${id}&client_secret=${secret}&v=${apiUpToDate}&limit=${limitResponses}&intent=browse&ll=${loc.lat},${loc.lng}&radius=10000&categoryId=${food}&query=${match}`;\n\n  let myHeaders = new Headers();\n\n  const myInit = {\n    method: 'GET',\n    headers: myHeaders,\n    mode: 'cors',\n    cache: 'default' };\n\n  myHeaders.append(\"Accept-Language\", \"en\");\n\n  return fetch(api, myInit)\n    .then((res) => {\n      if (res.ok){\n        return res.json();\n      }\n      throw new Error(`Network response was not OK on getQuery() request. Status: ${res.status}`);\n    })\n};\n\n// Not used, only for exploring the API.\n// Returns valid Venue categories to be used as filters in the app.\nexport const getCategories = (loc) => {\n  const api = \"https://api.foursquare.com/v2/venues/categories?\";\n\n  let myHeaders = new Headers();\n\n  const myInit = {\n    method: 'GET',\n    headers: myHeaders,\n    mode: 'cors',\n    cache: 'default' };\n\n  myHeaders.append(\"Accept-Language\", \"en\");\n\n  return fetch(`${api}client_id=${id}&client_secret=${secret}&v=${apiUpToDate}&limit=${limitResponses}&intent=browse&ll=${loc.lat},${loc.lng}&radius=10000`, myInit)\n    .then((res) => res.json())\n    .catch( (err) => {\n      console.log(\"getSearch error, \", err)\n    });\n}\n\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport * as FoursquareAPI from '../utils/FoursquareAPI'\n\n\nclass SearchField extends Component {\n\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    update: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\"\n    };\n  }\n\n  updateQuery = (e) => {\n    this.setState({\n        query: e.target.value}\n    );\n  };\n\n  onKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.searchApi();\n      // if (this.state.query){ // not empty\n      //   this.searchApi();\n      // }\n    }\n  };\n\n  // Search API with a specific query/filter\n  // update() is called in App.js, to update TapasList component\n  searchApi = () => {\n    if (this.state.query){\n      FoursquareAPI.getQuery(this.state.query, this.props.location)\n        .then(jsonRes => {\n          this.props.update(jsonRes.response.venues, this.state.query);\n          }\n        ).catch( (err) => {\n        alert(err.message)\n      });\n    } else {\n      FoursquareAPI.getSearch(this.props.location)\n        .then(jsonRes => {\n          this.props.update(jsonRes.response.venues, this.state.query)\n        }).catch( (err) => {\n          alert(err.message)\n      });\n    }\n\n  };\n\n  render() {\n    return (<div className=\"search-menu\">\n      <div className=\"search-book-bar\">\n        <div className=\"form-group\">\n          <input className=\"form-control\"\n                 type=\"search\"\n                 value={this.state.query}\n                 onKeyPress={this.onKeyPress}\n                 onChange={(event) => this.updateQuery(event)}\n                 placeholder=\"Search by venue name...\"\n                 aria-label=\"Search by venue name\"\n          />\n        </div>\n        <img className=\"float-right\" src={require(\"../images/powered-by-foursquare-grey.png\")} height=\"10\" alt=\"\"/>\n      </div>\n\n    </div> )\n  }\n}\n\nexport default SearchField;\n\n// Notes:\n// Resources to develop the throttle functionality:\n// https://www.peterbe.com/plog/how-to-throttle-and-debounce-an-autocomplete-input-in-react","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\n\n\nclass TapasList extends Component {\n\n  static propTypes = {\n    recommend: PropTypes.bool.isRequired,\n    tapas: PropTypes.array.isRequired,\n    onCheckedId: PropTypes.func\n  };\n\n  getVenuePhoto = (tapa) => {\n    // Method not used in this version, Can exceed Foursquare API request limits quite quickly.\n    if (tapa.photos && tapa.photos.photo_res.length > 0) {\n      let prefix = tapa.photos.photo_res[0].prefix;\n      let suffix  = tapa.photos.photo_res[0].suffix;\n      return `${prefix}300x300${suffix}`;\n    } else {\n      return `https://via.placeholder.com/300`;\n    }\n  };\n\n  getVenueIcon = (tapa) => {\n    // Known sizes: 32, 45, 60, 90, 120\n    if (tapa.categories[0].icon) {\n      let prefix = tapa.categories[0].icon.prefix;\n      let suffix  = tapa.categories[0].icon.suffix;\n      return `${prefix}bg_120${suffix}`;\n    } else {\n      return `https://via.placeholder.com/300`;\n    }\n  };\n\n\n  handleSelection(e){\n    // e.persist();\n    // e.preventDefault();\n    this.props.onCheckedId(e.currentTarget.dataset.id);\n  }\n\n  componentDidUpdate(){\n    // console.log(\"did update\")\n    // //\n    // if (this.props.tapas && this.props.tapas.length > 0){\n    //   console.log(this.props.tapas);\n    //   this.props.tapas.map(tapa => {\n    //     let element = document.getElementById(tapa.id);\n    //     if (element){\n    //       element.addEventListener(\"keyup\", (evt => {\n    //         // evt.preventDefault();\n    //         if (evt.keyCode === 13){\n    //           element.click();\n    //         }\n    //       }))\n    //     }\n    //   })\n    // }\n  }\n\n  isRecommended = (tapas) => {\n    if (tapas && tapas.length === 0){\n      return (<li key={0} className='card text-center'>\n          <div className=\"card-body\">\n            <h5 className=\"card-title pt-3\">Sorry no results for your search!</h5>\n            <p className=\"font-weight-normal\">...maybe try something else?</p>\n          </div>\n      </li>)\n    }\n\n    if (this.props.recommend){\n      return (tapas && tapas.length > 0 && (tapas.map( tapa => (\n        <li key={tapa.referralId} className='card'\n            onClick={this.handleSelection.bind(this)} data-id={tapa.venue.id} tabIndex=\"0\" id={tapa.venue.id}>\n          <div className='card-body'>\n            <img className=\"photo rounded float-left img-fluid\"\n                 src={this.getVenuePhoto(tapa)} alt={`${tapa.venue.name}`} width=\"300\" height=\"300\"/>\n            <div className=\"card-body\">\n              <h5 className=\"card-title mb-1\">{tapa.venue.name}</h5>\n              <p className=\"font-weight-normal mb-0\">Address: {tapa.venue.location.address}</p>\n              <p className=\"font-weight-light mb-0\">Category: {tapa.venue.categories[0].name}</p>\n              <p className=\"font-weight-light font-italic mb-0\"> {tapa.reasons.items[0].summary}</p>\n            </div>\n          </div>\n        </li>\n      ))))\n    } else {\n      return (tapas && tapas.length > 0 && (tapas.map( venue => (\n        <li key={venue.id} className='card'\n            onClick={this.handleSelection.bind(this)} data-id={venue.id} tabIndex=\"0\" id={venue.id}>\n          <div className='card-body'>\n            <img className=\"photo rounded float-left img-fluid\"\n                 src={this.getVenueIcon(venue)} alt={`Icon of ${venue.name}`} width=\"300\" height=\"300\"/>\n            <div className=\"card-body\">\n              <h5 className=\"card-title mb-1\">{venue.name}</h5>\n              <p className=\"font-weight-normal mb-0\">Address: {venue.location.address}</p>\n              <p className=\"font-weight-light mb-0\">Category: {venue.categories[0].name}</p>\n            </div>\n          </div>\n        </li>\n      ))))\n    }\n  };\n\n  render() {\n\n    const {tapas} = this.props;\n\n    return (\n      <div className=\"\">\n        <div className=\"list-container\">\n        <ul className=\"list-group\">\n          { this.isRecommended(tapas)\n        }\n        </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TapasList;\n\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n\nclass FilterButton extends Component {\n  static propTypes = {\n    items: PropTypes.number,\n    onNumberUpdate: PropTypes.func\n  };\n  chooseNumber = (nr, evt) => {\n    evt.preventDefault();\n    // console.log(evt);\n    this.props.onNumberUpdate(nr);\n  };\n\n  render(){\n    return (<button className=\"dropdown-item\" onClick={e => this.chooseNumber(`${this.props.items}`, e)}>{this.props.items} items</button>)\n  }\n}\n\nexport default FilterButton;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport FilterButton from \"./FilterButton\";\n\nclass FilterLength extends Component{\n  static propTypes = {\n    tapas: PropTypes.array,\n    tapasShown: PropTypes.array,\n    onNumberUpdate: PropTypes.func\n  };\n\n  loadButtons = () => {\n    const {onNumberUpdate} = this.props;\n\n    let buttons;\n    let expr = this.props.tapas.length;\n    switch (true) {\n      case (expr < 11):\n        buttons = (\n            <div className=\"dropdown-menu\">\n              <FilterButton items={this.props.tapasShown.length} onNumberUpdate={onNumberUpdate}/>\n            </div>\n        );\n        break;\n      case (expr < 21):\n        buttons = (\n            <div className=\"dropdown-menu\">\n              <FilterButton items={10} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={this.props.tapas.length} onNumberUpdate={onNumberUpdate}/>\n            </div>);\n        break;\n      case (expr < 31):\n        buttons = (\n            <div className=\"dropdown-menu\">\n              <FilterButton items={10} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={20} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={this.props.tapas.length} onNumberUpdate={onNumberUpdate}/>\n            </div>\n        );\n        break;\n      case (expr < 41):\n        buttons = (\n            <div className=\"dropdown-menu\">\n              <FilterButton items={10} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={20} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={30} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={this.props.tapas.length} onNumberUpdate={onNumberUpdate}/>\n            </div>);\n        break;\n      case (expr < 51):\n        buttons = (\n            <div className=\"dropdown-menu\">\n              <FilterButton items={10} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={20} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={30} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={40} onNumberUpdate={onNumberUpdate}/>\n              <FilterButton items={this.props.tapas.length} onNumberUpdate={onNumberUpdate}/>\n            </div>);\n        break;\n      default:\n        console.log('Sorry, we are out of ' + expr + '.');\n    }\n    return buttons;\n  };\n\n  render(){\n    return <div className=\"search-menu\">\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn btn-secondary\">Showing { this.props.tapasShown.length || '0' } results</button>\n        <button type=\"button\" className=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          <span className=\"sr-only\">Toggle Results Dropdown</span>\n        </button>\n        {this.loadButtons()}\n      </div>\n    </div>\n  }\n\n}\n\nexport default FilterLength;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport escapeRegExp from \"escape-string-regexp\";\nimport './App.css';\nimport SearchField from './components/SearchField'\nimport TapasList from './components/TapasList'\nimport * as FoursquareAPI from './utils/FoursquareAPI'\nimport MapPromise from \"./components/MapPromise\";\nimport FilterLength from \"./components/FilterLength\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      tapas: [],\n      tapasShown: [],\n      showLength: 10,\n      location: {\n        lat: 50.121870,\n        lng: 8.689550\n      },\n      checkedId: \"\",\n      recommend: false, // false: Reduce number of API requests\n      mapKey: 0\n    }\n  }\n\n  componentWillMount(){\n    // Logging purposes only:\n    // FoursquareAPI.getCategories(this.state.location)\n    //   .then(myJson => {\n    //     console.log(\"Json.response: \", myJson.response );\n    //     console.log(JSON.stringify(myJson.response))\n    //   })\n  }\n\n  // Lifecycle event, fetches restaurants from FourSquare API\n  componentDidMount(){\n\n    if (this.state.recommend){\n      // Narrow search, recommended venues only\n      FoursquareAPI.getBest(this.state.location)\n        .then( myJson => {\n          this.setState({tapas: myJson.response.groups[0].items},\n            () => {this.addPhotos()});\n        }).catch( err => {\n          alert(err.message)\n      } )\n    } else {\n      // Broad search\n      FoursquareAPI.getSearch(this.state.location)\n        .then( myJson => {\n          this.setState({\n            tapas: myJson.response.venues,\n            tapasShown: this.shortenResults(myJson.response.venues, this.state.showLength)\n          });\n        }).catch( (err) => {\n          alert(err.message)\n      });\n    }\n  }\n\n  // Method used in older versions. Currently disabled due to\n  // limited number of Foursquare API requests allowed\n  addPhotos = () => {\n    let idArray;\n    // Clone tapas (deep copy)\n    let temp_tapas = JSON.parse(JSON.stringify(this.state.tapas));\n    // let temp_tapas = [...this.state.tapas]; // TODO: Check if spread operator worked\n\n    // If '/explore?' responses loaded, request API again with venue's id for photos\n    // Not most efficient, but the explore-API returns no images on first request.\n    if (this.state.tapas){\n\n      idArray  = this.state.tapas.map( tapa => {\n        let venue;\n        if (this.state.recommend){\n          venue = tapa.venue;\n        } else {\n          venue = tapa;\n        }\n        return venue.id;\n      } );\n\n      FoursquareAPI.getPhotos(idArray)\n        .then( jsonResolvedArr => {\n          // Create array of resolved promises' responses array\n          jsonResolvedArr.map( (promise, indx) => (\n            promise.then( res => {\n              // Add photos to new venues objects\n              temp_tapas[indx].photos = {id: idArray[indx], photo_res: res.response.photos.items}\n            })));\n        }) // Refresh state only after all photo addresses have been loaded\n        .then( () => {\n          this.setState({tapas: temp_tapas})\n        })\n    }\n  };\n\n  updateRecommendation = () => {\n    if (this.state.recommend){\n      this.setState({recommend: false})\n    } else {\n      this.setState({recommend: true})\n    }\n  };\n\n  // Method called on SearchFields.js in searchApi()\n  updateResults = (foundTapas, query) => {\n\n    let cleanTapas = this.cleanSearchResults(foundTapas, query);\n    let cleanShortTapas = this.shortenResults(cleanTapas, this.state.showLength);\n\n    this.setState({\n      tapas: cleanTapas,\n      tapasShown: cleanShortTapas\n      // mapKey: this.state.mapKey + 1 // Forces MapPromise component to re-mount, deleting the old markers on map\n    },\n      // () => {this.addPhotos()} // Disabled to reduce API requests\n    )\n  };\n\n  updateTapasShown = (nr) => {\n    if (nr !== this.state.showLength){\n      let shownTapas = this.state.tapas.slice(0, nr);\n      this.setState({\n        tapasShown: shownTapas,\n        showLength: nr\n      })\n    }\n\n  };\n\n  cleanSearchResults = (foundTapas, query) => {\n    // Clean the results, checking for:\n    // 1. Address is not empty\n    // 2. Query is in name or in categories\n    let cleanTapas = foundTapas.filter( tapa => {\n      if (tapa.location.address) {\n        const match = new RegExp(escapeRegExp(query), 'i');\n\n        if (match.test(tapa.name)\n          || match.test(tapa.categories[0].name)\n          || match.test(tapa.categories[0].pluralName)\n          || match.test(tapa.categories[0].shortName)) {\n          return tapa;\n        }\n      }\n    });\n\n    return cleanTapas;\n  };\n\n  shortenResults = (tapas, length) => {\n    return tapas.slice(0, length);\n  };\n\n  handleCheck = (id) => {\n    // Clean all previous list selection (if any)\n    let selections = document.getElementsByClassName(\"highlight\");\n    if (selections && selections.length > 0) {\n      Array.prototype.map.call(selections, el => el.classList.remove(\"highlight\") );\n    }\n    if (this.state.checkedId !== id){\n      document.getElementById(id).classList.add(\"highlight\");\n    } else {\n      id = \"\"\n    }\n\n    this.setState({\n      checkedId: id\n      }\n    );\n  };\n\n  infoClosed = (id) => {\n    if (id === this.state.checkedId){\n      if (document.getElementById(this.state.checkedId)){\n        document.getElementById(this.state.checkedId).classList.remove(\"highlight\");\n      }\n      this.setState({ checkedId: \"\"})\n    }\n  };\n\n  render() {\n\n    return (\n      <div>\n        <Route exact path=\"/\" render={ () => (\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6\">\n\n              <SearchField\n                location={this.state.location}\n                update={this.updateResults}/>\n\n              <FilterLength\n                tapas={this.state.tapas}\n                tapasShown={this.state.tapasShown}\n                onNumberUpdate={this.updateTapasShown}\n              />\n\n              <TapasList\n                recommend={this.state.recommend}\n                tapas={this.state.tapasShown}\n                onCheckedId={this.handleCheck}\n              />\n            </div>\n\n            <div className=\"map-container col-12 col-md-6\" role=\"application\" aria-label=\"Filtered venue locations\">\n              <MapPromise\n                key={this.state.mapKey}\n                recommend={this.state.recommend}\n                tapas={this.state.tapasShown}\n                checkedId={this.state.checkedId}\n                handleInfoClose={this.infoClosed}\n              />\n            </div>\n          </div>\n        )}\n        />\n        {/*<Route path=\"/favourites\" render={({history}) => (*/}\n          {/*<Favourites/>*/}\n        {/*)}/>*/}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n/*\n* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n* */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // replaced: import './bootstrap-4.1.3-dist/js/bootstrap.js/bootsrap.min.js'\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n\n\n// Project rubric\n// https://review.udacity.com/#!/rubrics/1351/view"],"sourceRoot":""}