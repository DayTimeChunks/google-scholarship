{"ast":null,"code":"import _classCallCheck from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport SearchField from './SearchField';\nimport TapasList from './TapasList';\nimport Favourites from './Favourites';\nimport * as FoursquareAPI from './utils/FoursquareAPI'; // import {hardTapas} from \"./utils/FoursquareAPI\";\n\nimport MapPromise from \"./components/MapPromise\";\nimport escapeRegExp from \"escape-string-regexp\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.addPhotos = function () {\n      console.log(\"Enter addPhotos, tapas: \", _this.state.tapas);\n      var idArray; // Clone tapas (deep copy)\n\n      var temp_tapas = JSON.parse(JSON.stringify(_this.state.tapas)); // let temp_tapas = [...this.state.tapas]; // TODO: Check if spread operator worked\n      // If '/explore?' responses loaded, request API again with venue's id for photos\n      // Not most efficient, but the explore-API returns no images on first request.\n\n      if (_this.state.tapas) {\n        idArray = _this.state.tapas.map(function (tapa) {\n          var venue;\n\n          if (_this.state.recommend) {\n            venue = tapa.venue;\n          } else {\n            venue = tapa;\n          }\n\n          return venue.id;\n        });\n        console.log(\"idArray: \", idArray);\n        FoursquareAPI.getPhotos(idArray).then(function (jsonResolvedArr) {\n          // Create array of resolved promises' responses array\n          jsonResolvedArr.map(function (promise, indx) {\n            return promise.then(function (res) {\n              // Add photos to new venues objects\n              temp_tapas[indx].photos = {\n                id: idArray[indx],\n                photo_res: res.response.photos.items\n              };\n            });\n          });\n        }) // Refresh state only after all photo addresses have been loaded\n        .then(function () {\n          _this.setState({\n            tapas: temp_tapas\n          });\n        });\n      }\n    };\n\n    _this.updateRecommendation = function () {\n      if (_this.state.recommend) {\n        _this.setState({\n          recommend: false\n        });\n      } else {\n        _this.setState({\n          recommend: true\n        });\n      }\n    };\n\n    _this.updateResults = function (foundTapas, query) {\n      // Clean the results, checking for:\n      // 1. Address is not empty\n      // 2. Query is in name or in categories\n      var cleanTapas = foundTapas.filter(function (tapa) {\n        if (tapa.location.address) {\n          var match = new RegExp(escapeRegExp(query), 'i');\n\n          if (match.test(tapa.name) || match.test(tapa.categories[0].name) || match.test(tapa.categories[0].pluralName) || match.test(tapa.categories[0].shortName)) {\n            return tapa;\n          }\n        }\n      });\n\n      _this.setState({\n        tapas: cleanTapas // mapKey: this.state.mapKey + 1 // Forces MapPromise component to re-mount, deleting the old markers on map\n\n      } // () => {this.addPhotos()} // Disabled to reduce API requests\n      );\n    };\n\n    _this.handleCheck = function (id) {\n      // Clean all previous list selection (if any)\n      var selections = document.getElementsByClassName(\"highlight\");\n\n      if (selections && selections.length > 0) {\n        Array.prototype.map.call(selections, function (el) {\n          return el.classList.remove(\"highlight\");\n        });\n      }\n\n      console.log(_this.state.checkedId);\n\n      if (_this.state.checkedId != id) {\n        document.getElementById(id).classList.add(\"highlight\");\n      } else {\n        id = \"\";\n      }\n\n      _this.setState({\n        checkedId: id\n      });\n    };\n\n    _this.infoClosed = function (id) {\n      if (id === _this.state.checkedId) {\n        if (document.getElementById(_this.state.checkedId)) {\n          document.getElementById(_this.state.checkedId).classList.remove(\"highlight\");\n        }\n\n        _this.setState({\n          checkedId: \"\"\n        });\n      }\n    };\n\n    _this.state = {\n      query: \"\",\n      tapas: [],\n      location: {\n        lat: 50.121870,\n        lng: 8.689550\n      },\n      checkedId: \"\",\n      recommend: false,\n      // false: Reduce number of API requests\n      mapKey: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {} // Logging purposes only:\n    // FoursquareAPI.getCategories(this.state.location)\n    //   .then(myJson => {\n    //     console.log(\"Json.response: \", myJson.response );\n    //     console.log(JSON.stringify(myJson.response))\n    //   })\n    // Lifecycle event, fetches restaurants from FourSquare API\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"App did Mount\");\n\n      if (this.state.recommend) {\n        // Narrow search, recommended venues only\n        FoursquareAPI.getBest(this.state.location).then(function (myJson) {\n          console.log(\"Json.response: \", myJson.response);\n\n          _this2.setState({\n            tapas: myJson.response.groups[0].items\n          }, function () {\n            _this2.addPhotos();\n          });\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else {\n        // Broad search\n        FoursquareAPI.getSearch(this.state.location).then(function (myJson) {\n          console.log(\"Json.response: \", myJson.response);\n          console.log(\"Json.String: \", JSON.stringify(myJson.response));\n\n          _this2.setState({\n            tapas: myJson.response.venues\n          });\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(\"App did Update\"); // console.log(\"did Update:\" , this.state.checkedId);\n    } // Method used in older versions. Currently disabled due to\n    // limited number of Foursquare API requests allowed\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-12 col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }, React.createElement(SearchField, {\n            tapas: _this3.state.tapas,\n            location: _this3.state.location,\n            update: _this3.updateResults,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }), React.createElement(\"img\", {\n            src: \"./public/powered-by-foursquare-grey.png\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }), React.createElement(TapasList, {\n            recommend: _this3.state.recommend,\n            tapas: _this3.state.tapas,\n            onCheckedId: _this3.handleCheck,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"map-container col-12 col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }, React.createElement(MapPromise, {\n            key: _this3.state.mapKey,\n            recommend: _this3.state.recommend,\n            tapas: _this3.state.tapas,\n            checkedId: _this3.state.checkedId,\n            handleInfoClose: _this3.infoClosed,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/favourites\",\n        render: function render(_ref) {\n          var history = _ref.history;\n          return React.createElement(Favourites, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n/*\n* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n* */","map":{"version":3,"sources":["/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/src/App.js"],"names":["React","Component","Route","SearchField","TapasList","Favourites","FoursquareAPI","MapPromise","escapeRegExp","App","props","addPhotos","console","log","state","tapas","idArray","temp_tapas","JSON","parse","stringify","map","tapa","venue","recommend","id","getPhotos","then","jsonResolvedArr","promise","indx","res","photos","photo_res","response","items","setState","updateRecommendation","updateResults","foundTapas","query","cleanTapas","filter","location","address","match","RegExp","test","name","categories","pluralName","shortName","handleCheck","selections","document","getElementsByClassName","length","Array","prototype","call","el","classList","remove","checkedId","getElementById","add","infoClosed","lat","lng","mapKey","getBest","myJson","groups","catch","err","getSearch","venues","history"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,uBAA/B,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAuDnBC,SAvDmB,GAuDP,YAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,MAAKC,KAAL,CAAWC,KAAnD;AACA,UAAIC,OAAJ,CAFgB,CAGhB;;AACA,UAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,MAAKN,KAAL,CAAWC,KAA1B,CAAX,CAAjB,CAJgB,CAKhB;AAEA;AACA;;AACA,UAAI,MAAKD,KAAL,CAAWC,KAAf,EAAqB;AAEnBC,QAAAA,OAAO,GAAI,MAAKF,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAsB,UAAAC,IAAI,EAAI;AACvC,cAAIC,KAAJ;;AACA,cAAI,MAAKT,KAAL,CAAWU,SAAf,EAAyB;AACvBD,YAAAA,KAAK,GAAGD,IAAI,CAACC,KAAb;AACD,WAFD,MAEO;AACLA,YAAAA,KAAK,GAAGD,IAAR;AACD;;AACD,iBAAOC,KAAK,CAACE,EAAb;AACD,SARU,CAAX;AASAb,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,OAAzB;AAEAV,QAAAA,aAAa,CAACoB,SAAd,CAAwBV,OAAxB,EACGW,IADH,CACS,UAAAC,eAAe,EAAI;AACxB;AACAA,UAAAA,eAAe,CAACP,GAAhB,CAAqB,UAACQ,OAAD,EAAUC,IAAV;AAAA,mBACnBD,OAAO,CAACF,IAAR,CAAc,UAAAI,GAAG,EAAI;AACnB;AACAd,cAAAA,UAAU,CAACa,IAAD,CAAV,CAAiBE,MAAjB,GAA0B;AAACP,gBAAAA,EAAE,EAAET,OAAO,CAACc,IAAD,CAAZ;AAAoBG,gBAAAA,SAAS,EAAEF,GAAG,CAACG,QAAJ,CAAaF,MAAb,CAAoBG;AAAnD,eAA1B;AACD,aAHD,CADmB;AAAA,WAArB;AAKD,SARH,EAQK;AARL,SASGR,IATH,CASS,YAAM;AACX,gBAAKS,QAAL,CAAc;AAACrB,YAAAA,KAAK,EAAEE;AAAR,WAAd;AACD,SAXH;AAYD;AACF,KA1FkB;;AAAA,UA4FnBoB,oBA5FmB,GA4FI,YAAM;AAC3B,UAAI,MAAKvB,KAAL,CAAWU,SAAf,EAAyB;AACvB,cAAKY,QAAL,CAAc;AAACZ,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD,OAFD,MAEO;AACL,cAAKY,QAAL,CAAc;AAACZ,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACD;AACF,KAlGkB;;AAAA,UAqGnBc,aArGmB,GAqGH,UAACC,UAAD,EAAaC,KAAb,EAAuB;AAErC;AACA;AACA;AACA,UAAIC,UAAU,GAAGF,UAAU,CAACG,MAAX,CAAmB,UAAApB,IAAI,EAAI;AAC1C,YAAIA,IAAI,CAACqB,QAAL,CAAcC,OAAlB,EAA2B;AACzB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAWtC,YAAY,CAACgC,KAAD,CAAvB,EAAgC,GAAhC,CAAd;;AAEA,cAAIK,KAAK,CAACE,IAAN,CAAWzB,IAAI,CAAC0B,IAAhB,KACCH,KAAK,CAACE,IAAN,CAAWzB,IAAI,CAAC2B,UAAL,CAAgB,CAAhB,EAAmBD,IAA9B,CADD,IAECH,KAAK,CAACE,IAAN,CAAWzB,IAAI,CAAC2B,UAAL,CAAgB,CAAhB,EAAmBC,UAA9B,CAFD,IAGCL,KAAK,CAACE,IAAN,CAAWzB,IAAI,CAAC2B,UAAL,CAAgB,CAAhB,EAAmBE,SAA9B,CAHL,EAG+C;AAC7C,mBAAO7B,IAAP;AACD;AACF;AACF,OAXgB,CAAjB;;AAaA,YAAKc,QAAL,CAAc;AACZrB,QAAAA,KAAK,EAAE0B,UADK,CAEZ;;AAFY,OAAd,CAIE;AAJF;AAMD,KA7HkB;;AAAA,UA+HnBW,WA/HmB,GA+HL,UAAC3B,EAAD,EAAQ;AACpB;AACA,UAAI4B,UAAU,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAjB;;AACA,UAAIF,UAAU,IAAIA,UAAU,CAACG,MAAX,GAAoB,CAAtC,EAAyC;AACvCC,QAAAA,KAAK,CAACC,SAAN,CAAgBrC,GAAhB,CAAoBsC,IAApB,CAAyBN,UAAzB,EAAqC,UAAAO,EAAE;AAAA,iBAAIA,EAAE,CAACC,SAAH,CAAaC,MAAb,CAAoB,WAApB,CAAJ;AAAA,SAAvC;AACD;;AACDlD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWiD,SAAvB;;AACA,UAAI,MAAKjD,KAAL,CAAWiD,SAAX,IAAwBtC,EAA5B,EAA+B;AAC7B6B,QAAAA,QAAQ,CAACU,cAAT,CAAwBvC,EAAxB,EAA4BoC,SAA5B,CAAsCI,GAAtC,CAA0C,WAA1C;AACD,OAFD,MAEO;AACLxC,QAAAA,EAAE,GAAG,EAAL;AACD;;AAED,YAAKW,QAAL,CAAc;AACZ2B,QAAAA,SAAS,EAAEtC;AADC,OAAd;AAID,KAhJkB;;AAAA,UAkJnByC,UAlJmB,GAkJN,UAACzC,EAAD,EAAQ;AACnB,UAAIA,EAAE,KAAK,MAAKX,KAAL,CAAWiD,SAAtB,EAAgC;AAC9B,YAAIT,QAAQ,CAACU,cAAT,CAAwB,MAAKlD,KAAL,CAAWiD,SAAnC,CAAJ,EAAkD;AAChDT,UAAAA,QAAQ,CAACU,cAAT,CAAwB,MAAKlD,KAAL,CAAWiD,SAAnC,EAA8CF,SAA9C,CAAwDC,MAAxD,CAA+D,WAA/D;AACD;;AACD,cAAK1B,QAAL,CAAc;AAAE2B,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF,KAzJkB;;AAEjB,UAAKjD,KAAL,GAAa;AACX0B,MAAAA,KAAK,EAAE,EADI;AAEXzB,MAAAA,KAAK,EAAE,EAFI;AAGX4B,MAAAA,QAAQ,EAAE;AACRwB,QAAAA,GAAG,EAAE,SADG;AAERC,QAAAA,GAAG,EAAE;AAFG,OAHC;AAOXL,MAAAA,SAAS,EAAE,EAPA;AAQXvC,MAAAA,SAAS,EAAE,KARA;AAQO;AAClB6C,MAAAA,MAAM,EAAE;AATG,KAAb;AAFiB;AAalB;;;;yCAEmB,CAOnB,C,CANC;AACA;AACA;AACA;AACA;AACA;AAGF;;;;wCACmB;AAAA;;AACjBzD,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AAEA,UAAI,KAAKC,KAAL,CAAWU,SAAf,EAAyB;AACvB;AACAlB,QAAAA,aAAa,CAACgE,OAAd,CAAsB,KAAKxD,KAAL,CAAW6B,QAAjC,EACGhB,IADH,CACS,UAAA4C,MAAM,EAAI;AACf3D,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B0D,MAAM,CAACrC,QAAtC;;AACA,UAAA,MAAI,CAACE,QAAL,CAAc;AAACrB,YAAAA,KAAK,EAAEwD,MAAM,CAACrC,QAAP,CAAgBsC,MAAhB,CAAuB,CAAvB,EAA0BrC;AAAlC,WAAd,EACE,YAAM;AAAC,YAAA,MAAI,CAACxB,SAAL;AAAiB,WAD1B;AAED,SALH,EAKK8D,KALL,CAKY,UAAAC,GAAG,EAAI;AAAE9D,UAAAA,OAAO,CAACC,GAAR,CAAY6D,GAAZ;AAAiB,SALtC;AAMD,OARD,MAQO;AACL;AACApE,QAAAA,aAAa,CAACqE,SAAd,CAAwB,KAAK7D,KAAL,CAAW6B,QAAnC,EACGhB,IADH,CACS,UAAA4C,MAAM,EAAI;AACf3D,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B0D,MAAM,CAACrC,QAAtC;AACAtB,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,IAAI,CAACE,SAAL,CAAemD,MAAM,CAACrC,QAAtB,CAA7B;;AACA,UAAA,MAAI,CAACE,QAAL,CAAc;AAACrB,YAAAA,KAAK,EAAEwD,MAAM,CAACrC,QAAP,CAAgB0C;AAAxB,WAAd;AACD,SALH,EAKKH,KALL,CAKY,UAAAC,GAAG,EAAI;AAAE9D,UAAAA,OAAO,CAACC,GAAR,CAAY6D,GAAZ;AAAiB,SALtC;AAMD;AACF;;;yCAEmB;AAClB9D,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADkB,CAElB;AAED,K,CAED;AACA;;;;6BAqGS;AAAA;;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAG;AAAA,iBAC7B;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE,oBAAC,WAAD;AACE,YAAA,KAAK,EAAE,MAAI,CAACC,KAAL,CAAWC,KADpB;AAEE,YAAA,QAAQ,EAAE,MAAI,CAACD,KAAL,CAAW6B,QAFvB;AAGE,YAAA,MAAM,EAAE,MAAI,CAACL,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAOE;AAAK,YAAA,GAAG,EAAC,yCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EASE,oBAAC,SAAD;AACE,YAAA,SAAS,EAAE,MAAI,CAACxB,KAAL,CAAWU,SADxB;AAEE,YAAA,KAAK,EAAE,MAAI,CAACV,KAAL,CAAWC,KAFpB;AAGE,YAAA,WAAW,EAAE,MAAI,CAACqC,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADF,EAiBE;AAAK,YAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,UAAD;AACE,YAAA,GAAG,EAAE,MAAI,CAACtC,KAAL,CAAWuD,MADlB;AAEE,YAAA,SAAS,EAAE,MAAI,CAACvD,KAAL,CAAWU,SAFxB;AAGE,YAAA,KAAK,EAAE,MAAI,CAACV,KAAL,CAAWC,KAHpB;AAIE,YAAA,SAAS,EAAE,MAAI,CAACD,KAAL,CAAWiD,SAJxB;AAKE,YAAA,eAAe,EAAE,MAAI,CAACG,UALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAjBF,CAD6B;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EA+BE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,MAAM,EAAE;AAAA,cAAEW,OAAF,QAAEA,OAAF;AAAA,iBAChC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADgC;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BF,CADF;AAsCD;;;;EArMe5E,S;;AAwMlB,eAAeQ,GAAf;AAGA","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport './App.css';\nimport SearchField from './SearchField'\n\nimport TapasList from './TapasList'\nimport Favourites from './Favourites'\nimport * as FoursquareAPI from './utils/FoursquareAPI'\n// import {hardTapas} from \"./utils/FoursquareAPI\";\n\nimport MapPromise from \"./components/MapPromise\";\nimport escapeRegExp from \"escape-string-regexp\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      tapas: [],\n      location: {\n        lat: 50.121870,\n        lng: 8.689550\n      },\n      checkedId: \"\",\n      recommend: false, // false: Reduce number of API requests\n      mapKey: 0\n    }\n  }\n\n  componentWillMount(){\n    // Logging purposes only:\n    // FoursquareAPI.getCategories(this.state.location)\n    //   .then(myJson => {\n    //     console.log(\"Json.response: \", myJson.response );\n    //     console.log(JSON.stringify(myJson.response))\n    //   })\n  }\n\n  // Lifecycle event, fetches restaurants from FourSquare API\n  componentDidMount(){\n    console.log(\"App did Mount\");\n\n    if (this.state.recommend){\n      // Narrow search, recommended venues only\n      FoursquareAPI.getBest(this.state.location)\n        .then( myJson => {\n          console.log(\"Json.response: \", myJson.response );\n          this.setState({tapas: myJson.response.groups[0].items},\n            () => {this.addPhotos()});\n        }).catch( err => { console.log(err)} )\n    } else {\n      // Broad search\n      FoursquareAPI.getSearch(this.state.location)\n        .then( myJson => {\n          console.log(\"Json.response: \", myJson.response );\n          console.log(\"Json.String: \", JSON.stringify(myJson.response) );\n          this.setState({tapas: myJson.response.venues});\n        }).catch( err => { console.log(err)} )\n    }\n  }\n\n  componentDidUpdate(){\n    console.log(\"App did Update\");\n    // console.log(\"did Update:\" , this.state.checkedId);\n\n  }\n\n  // Method used in older versions. Currently disabled due to\n  // limited number of Foursquare API requests allowed\n  addPhotos = () => {\n    console.log(\"Enter addPhotos, tapas: \", this.state.tapas)\n    let idArray;\n    // Clone tapas (deep copy)\n    let temp_tapas = JSON.parse(JSON.stringify(this.state.tapas));\n    // let temp_tapas = [...this.state.tapas]; // TODO: Check if spread operator worked\n\n    // If '/explore?' responses loaded, request API again with venue's id for photos\n    // Not most efficient, but the explore-API returns no images on first request.\n    if (this.state.tapas){\n\n      idArray  = this.state.tapas.map( tapa => {\n        let venue;\n        if (this.state.recommend){\n          venue = tapa.venue;\n        } else {\n          venue = tapa;\n        }\n        return venue.id;\n      } );\n      console.log(\"idArray: \", idArray)\n\n      FoursquareAPI.getPhotos(idArray)\n        .then( jsonResolvedArr => {\n          // Create array of resolved promises' responses array\n          jsonResolvedArr.map( (promise, indx) => (\n            promise.then( res => {\n              // Add photos to new venues objects\n              temp_tapas[indx].photos = {id: idArray[indx], photo_res: res.response.photos.items}\n            })));\n        }) // Refresh state only after all photo addresses have been loaded\n        .then( () => {\n          this.setState({tapas: temp_tapas})\n        })\n    }\n  };\n\n  updateRecommendation = () => {\n    if (this.state.recommend){\n      this.setState({recommend: false})\n    } else {\n      this.setState({recommend: true})\n    }\n  };\n\n  // Method called on SearchFields.js in searchApi()\n  updateResults = (foundTapas, query) => {\n\n    // Clean the results, checking for:\n    // 1. Address is not empty\n    // 2. Query is in name or in categories\n    let cleanTapas = foundTapas.filter( tapa => {\n      if (tapa.location.address) {\n        const match = new RegExp(escapeRegExp(query), 'i');\n\n        if (match.test(tapa.name)\n          || match.test(tapa.categories[0].name)\n          || match.test(tapa.categories[0].pluralName)\n          || match.test(tapa.categories[0].shortName)) {\n          return tapa;\n        }\n      }\n    });\n\n    this.setState({\n      tapas: cleanTapas,\n      // mapKey: this.state.mapKey + 1 // Forces MapPromise component to re-mount, deleting the old markers on map\n    },\n      // () => {this.addPhotos()} // Disabled to reduce API requests\n    )\n  };\n\n  handleCheck = (id) => {\n    // Clean all previous list selection (if any)\n    let selections = document.getElementsByClassName(\"highlight\");\n    if (selections && selections.length > 0) {\n      Array.prototype.map.call(selections, el => el.classList.remove(\"highlight\") );\n    }\n    console.log(this.state.checkedId)\n    if (this.state.checkedId != id){\n      document.getElementById(id).classList.add(\"highlight\");\n    } else {\n      id = \"\"\n    }\n\n    this.setState({\n      checkedId: id\n      }\n    );\n  };\n\n  infoClosed = (id) => {\n    if (id === this.state.checkedId){\n      if (document.getElementById(this.state.checkedId)){\n        document.getElementById(this.state.checkedId).classList.remove(\"highlight\");\n      }\n      this.setState({ checkedId: \"\"})\n    }\n  };\n\n  render() {\n\n    return (\n      <div>\n        <Route exact path=\"/\" render={ () => (\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6\">\n\n              <SearchField\n                tapas={this.state.tapas}\n                location={this.state.location}\n                update={this.updateResults}/>\n\n              <img src=\"./public/powered-by-foursquare-grey.png\"/>\n\n              <TapasList\n                recommend={this.state.recommend}\n                tapas={this.state.tapas}\n                onCheckedId={this.handleCheck}\n              />\n            </div>\n\n            <div className=\"map-container col-12 col-md-6\">\n              <MapPromise\n                key={this.state.mapKey}\n                recommend={this.state.recommend}\n                tapas={this.state.tapas}\n                checkedId={this.state.checkedId}\n                handleInfoClose={this.infoClosed}\n              />\n            </div>\n          </div>\n        )}\n        />\n        <Route path=\"/favourites\" render={({history}) => (\n          <Favourites/>\n        )}/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n/*\n* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n* */"]},"metadata":{},"sourceType":"module"}