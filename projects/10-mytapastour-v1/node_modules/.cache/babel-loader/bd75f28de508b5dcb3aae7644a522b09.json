{"ast":null,"code":"import _classCallCheck from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport SearchField from './SearchField';\nimport TapasList from './TapasList';\nimport Favourites from './Favourites';\nimport * as FoursquareAPI from './utils/FoursquareAPI'; // import {hardTapas} from \"./utils/FoursquareAPI\";\n\nimport MapPromise from \"./components/MapPromise\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.addPhotos = function () {\n      var idArray; // Clone tapas (deep copy)\n\n      var temp_tapas = JSON.parse(JSON.stringify(_this.state.tapas)); // let temp_tapas = [...this.state.tapas]; // TODO: Check if spread operator worked\n      // If '/explore?' responses loaded, request API again with venue's id for photos\n      // Not most efficient, but the explore-API returns no images on first request.\n\n      if (_this.state.tapas) {\n        idArray = _this.state.tapas.map(function (tapa) {\n          return tapa.venue.id;\n        });\n        FoursquareAPI.getPhotos(idArray).then(function (jsonResolvedArr) {\n          // Create array of resolved promises' responses array\n          jsonResolvedArr.map(function (promise, indx) {\n            return promise.then(function (res) {\n              // Add photos to new venues objects\n              temp_tapas[indx].photos = {\n                id: idArray[indx],\n                photo_res: res.response.photos.items\n              };\n            });\n          });\n        }) // Refresh state only after all photo addresses have been loaded\n        .then(function () {\n          _this.setState({\n            tapas: temp_tapas\n          });\n        });\n      }\n    };\n\n    _this.updateResults = function (foundTapas) {\n      _this.setState({\n        tapas: foundTapas\n      });\n    };\n\n    _this.handleCheck = function (id) {\n      console.log(\"passed id: \", id);\n\n      if (_this.state.checkedId === \"\" && id) {\n        document.getElementById(id).classList.add(\"highlight\");\n      }\n\n      if (_this.state.checkedId && _this.state.checkedId != id) {\n        document.getElementById(_this.state.checkedId).classList.remove(\"highlight\");\n      } // Delete \"id\" if already checked\n\n\n      if (_this.state.checkedId === id) {\n        id = \"\";\n        document.getElementById(_this.state.checkedId).classList.remove(\"highlight\");\n      }\n\n      _this.setState({\n        checkedId: id\n      });\n\n      console.log(\"state checkedID: \", _this.state.checkedId);\n    };\n\n    _this.infoClosed = function (id) {\n      if (id === _this.state.checkedId) {\n        _this.setState({\n          checkedId: \"\"\n        });\n      }\n    };\n\n    _this.state = {\n      query: \"\",\n      tapas: [],\n      location: {\n        lat: 50.121870,\n        lng: 8.689550\n      },\n      checkedId: \"\"\n    };\n    return _this;\n  } // Lifecycle event, fetches restaurants from FourSquare API\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      FoursquareAPI.getTapas(this.state.location).then(function (myJson) {\n        // console.log(\"Response:\", myJson );\n        _this2.setState({\n          tapas: myJson.response.groups[0].items\n        }, function () {\n          _this2.addPhotos();\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.checked_ids);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-12 col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, React.createElement(SearchField, {\n            tapas: _this3.state.tapas,\n            location: _this3.state.location,\n            update: _this3.updateResults,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }), React.createElement(TapasList, {\n            tapas: _this3.state.tapas,\n            onCheckedId: _this3.handleCheck,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"map-container col-12 col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(MapPromise, {\n            tapas: _this3.state.tapas,\n            checkedId: _this3.state.checkedId,\n            handleInfoClose: _this3.infoClosed,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/favourites\",\n        render: function render(_ref) {\n          var history = _ref.history;\n          return React.createElement(Favourites, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n/*\n* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n* */","map":{"version":3,"sources":["/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/src/App.js"],"names":["React","Component","Route","SearchField","TapasList","Favourites","FoursquareAPI","MapPromise","App","props","addPhotos","idArray","temp_tapas","JSON","parse","stringify","state","tapas","map","tapa","venue","id","getPhotos","then","jsonResolvedArr","promise","indx","res","photos","photo_res","response","items","setState","updateResults","foundTapas","handleCheck","console","log","checkedId","document","getElementById","classList","add","remove","infoClosed","query","location","lat","lng","getTapas","myJson","groups","catch","err","checked_ids","history"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport './App.css';\nimport SearchField from './SearchField'\n\nimport TapasList from './TapasList'\nimport Favourites from './Favourites'\nimport * as FoursquareAPI from './utils/FoursquareAPI'\n// import {hardTapas} from \"./utils/FoursquareAPI\";\n\nimport MapPromise from \"./components/MapPromise\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      tapas: [],\n      location: {\n        lat: 50.121870,\n        lng: 8.689550\n      },\n      checkedId: \"\"\n    }\n  }\n\n  // Lifecycle event, fetches restaurants from FourSquare API\n  componentDidMount(){\n    FoursquareAPI.getTapas(this.state.location)\n      .then( myJson => {\n        // console.log(\"Response:\", myJson );\n        this.setState({tapas: myJson.response.groups[0].items},\n          () => {this.addPhotos()});\n    }).catch( err => { console.log(err)} )\n  }\n\n  addPhotos = () => {\n    let idArray;\n    // Clone tapas (deep copy)\n    let temp_tapas = JSON.parse(JSON.stringify(this.state.tapas));\n    // let temp_tapas = [...this.state.tapas]; // TODO: Check if spread operator worked\n\n    // If '/explore?' responses loaded, request API again with venue's id for photos\n    // Not most efficient, but the explore-API returns no images on first request.\n    if (this.state.tapas){\n      idArray  = this.state.tapas.map( tapa => tapa.venue.id );\n      FoursquareAPI.getPhotos(idArray)\n        .then( jsonResolvedArr => {\n          // Create array of resolved promises' responses array\n          jsonResolvedArr.map( (promise, indx) => (\n            promise.then( res => {\n              // Add photos to new venues objects\n              temp_tapas[indx].photos = {id: idArray[indx], photo_res: res.response.photos.items}\n            })));\n        }) // Refresh state only after all photo addresses have been loaded\n        .then( () => {\n          this.setState({tapas: temp_tapas})\n        })\n    }\n  };\n\n  updateResults = (foundTapas) => {\n    this.setState({tapas: foundTapas})\n  };\n\n  handleCheck = (id) => {\n    console.log(\"passed id: \", id);\n    if (this.state.checkedId === \"\" && id){\n      document.getElementById(id).classList.add(\"highlight\");\n    }\n\n    if (this.state.checkedId && this.state.checkedId != id){\n      document.getElementById(this.state.checkedId).classList.remove(\"highlight\");\n    }\n    // Delete \"id\" if already checked\n    if (this.state.checkedId === id){\n      id = \"\";\n      document.getElementById(this.state.checkedId).classList.remove(\"highlight\");\n    }\n\n    this.setState({\n      checkedId: id\n      }\n    );\n    console.log(\"state checkedID: \", this.state.checkedId);\n  };\n\n  infoClosed = (id) => {\n    if (id === this.state.checkedId){\n      this.setState({ checkedId: \"\"})\n    }\n  };\n\n  render() {\n\n    console.log(this.state.checked_ids);\n\n    return (\n      <div>\n        <Route exact path=\"/\" render={ () => (\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6\">\n              <SearchField\n                tapas={this.state.tapas}\n                location={this.state.location}\n                update={this.updateResults}/>\n              <TapasList\n                tapas={this.state.tapas}\n                onCheckedId={this.handleCheck}\n              />\n            </div>\n            {/*<div className=\"map-container col-12 col-md-6\">*/}\n              {/*<Map*/}\n                {/*tapas={this.state.tapas}/>*/}\n            {/*</div>*/}\n            {/*<div className=\"map-container col-12 col-md-6\">*/}\n              {/*<MapWithOverlay*/}\n                {/*tapas={this.state.tapas}/>*/}\n            {/*</div>*/}\n\n            <div className=\"map-container col-12 col-md-6\">\n              <MapPromise\n                tapas={this.state.tapas}\n                checkedId={this.state.checkedId}\n                handleInfoClose={this.infoClosed}\n              />\n            </div>\n          </div>\n        )}\n        />\n        <Route path=\"/favourites\" render={({history}) => (\n          <Favourites/>\n        )}/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n/*\n* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n* */"]},"metadata":{},"sourceType":"module"}