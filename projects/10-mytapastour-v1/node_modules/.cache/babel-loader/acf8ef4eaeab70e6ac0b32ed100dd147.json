{"ast":null,"code":"import _classCallCheck from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/src/components/MapWithOverlay.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nvar _require = require(\"recompose\"),\n    compose = _require.compose,\n    withProps = _require.withProps,\n    withStateHandlers = _require.withStateHandlers; // const FaAnchor = require(\"react-icons/lib/fa/anchor\");\n\n\nvar _require2 = require(\"react-google-maps\"),\n    withScriptjs = _require2.withScriptjs,\n    withGoogleMap = _require2.withGoogleMap,\n    GoogleMap = _require2.GoogleMap,\n    OverlayView = _require2.OverlayView;\n\nvar MapWithOverlay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapWithOverlay, _Component);\n\n  function MapWithOverlay() {\n    _classCallCheck(this, MapWithOverlay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MapWithOverlay).apply(this, arguments));\n  }\n\n  _createClass(MapWithOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var getPixelPositionOffset = function getPixelPositionOffset(width, height) {\n        return {\n          x: -(width / 2),\n          y: -(height / 2)\n        };\n      };\n\n      var MapWithAnOverlayView = compose(withStateHandlers(function () {\n        return {\n          count: 0\n        };\n      }, {\n        onClick: function onClick(_ref) {\n          var count = _ref.count;\n          return function () {\n            return {\n              count: count + 1\n            };\n          };\n        }\n      }), withScriptjs, withGoogleMap)(function (props) {\n        return React.createElement(GoogleMap, {\n          defaultZoom: 8,\n          defaultCenter: {\n            lat: -34.397,\n            lng: 150.644\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(OverlayView, {\n          position: {\n            lat: -34.397,\n            lng: 150.644\n          }\n          /*\n           * An alternative to specifying position is specifying bounds.\n           * bounds can either be an instance of google.maps.LatLngBounds\n           * or an object in the following format:\n           * bounds={{\n           *    ne: { lat: 62.400471, lng: -150.005608 },\n           *    sw: { lat: 62.281819, lng: -150.287132 }\n           * }}\n           */\n\n          /*\n           * 1. Specify the pane the OverlayView will be rendered to. For\n           *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\n           *    Defaults to `OverlayView.OVERLAY_LAYER`.\n           */\n          ,\n          mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET\n          /*\n           * 2. Tweak the OverlayView's pixel position. In this case, we're\n           *    centering the content.\n           */\n          ,\n          getPixelPositionOffset: getPixelPositionOffset\n          /*\n           * 3. Create OverlayView content using standard React components.\n           */\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            background: \"white\",\n            border: \"1px solid #ccc\",\n            padding: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"OverlayView\"), React.createElement(\"button\", {\n          onClick: props.onClick,\n          style: {\n            height: 60\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"I have been clicked \", props.count, \" time\", props.count > 1 ? \"s\" : \"\"))));\n      });\n      return React.createElement(MapWithAnOverlayView, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyB8uwCpGazZQ4JvdwNQP9Jt0GH0FukWd-M&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: \"400px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MapWithOverlay;\n}(Component);\n\nMapWithOverlay.propTypes = {\n  tapas: PropTypes.array\n};\nexport default MapWithOverlay;","map":{"version":3,"sources":["/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/mytapas-v1/src/components/MapWithOverlay.js"],"names":["React","Component","PropTypes","require","compose","withProps","withStateHandlers","withScriptjs","withGoogleMap","GoogleMap","OverlayView","MapWithOverlay","getPixelPositionOffset","width","height","x","y","MapWithAnOverlayView","count","onClick","props","lat","lng","OVERLAY_MOUSE_TARGET","background","border","padding","propTypes","tapas","array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nconst { compose, withProps, withStateHandlers } = require(\"recompose\");\n// const FaAnchor = require(\"react-icons/lib/fa/anchor\");\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  OverlayView,\n} = require(\"react-google-maps\");\n\nclass MapWithOverlay extends Component {\n  static propTypes = {\n    tapas: PropTypes.array,\n  };\n\n  render(){\n    const getPixelPositionOffset = (width, height) => ({\n      x: -(width / 2),\n      y: -(height / 2),\n    })\n\n    const MapWithAnOverlayView = compose(\n      withStateHandlers(() => ({\n        count: 0,\n      }), {\n        onClick: ({ count }) => () => ({\n          count: count + 1,\n        })\n      }),\n      withScriptjs,\n      withGoogleMap\n    )(props =>\n      <GoogleMap\n        defaultZoom={8}\n        defaultCenter={{ lat: -34.397, lng: 150.644 }}\n      >\n        <OverlayView\n          position={{ lat: -34.397, lng: 150.644 }}\n          /*\n           * An alternative to specifying position is specifying bounds.\n           * bounds can either be an instance of google.maps.LatLngBounds\n           * or an object in the following format:\n           * bounds={{\n           *    ne: { lat: 62.400471, lng: -150.005608 },\n           *    sw: { lat: 62.281819, lng: -150.287132 }\n           * }}\n           */\n          /*\n           * 1. Specify the pane the OverlayView will be rendered to. For\n           *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\n           *    Defaults to `OverlayView.OVERLAY_LAYER`.\n           */\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n          /*\n           * 2. Tweak the OverlayView's pixel position. In this case, we're\n           *    centering the content.\n           */\n          getPixelPositionOffset={getPixelPositionOffset}\n          /*\n           * 3. Create OverlayView content using standard React components.\n           */\n        >\n          <div style={{ background: `white`, border: `1px solid #ccc`, padding: 15 }}>\n            <h1>OverlayView</h1>\n            <button onClick={props.onClick} style={{ height: 60 }}>\n              I have been clicked {props.count} time{props.count > 1 ? `s` : ``}\n            </button>\n          </div>\n        </OverlayView>\n      </GoogleMap>\n    );\n\n    return <MapWithAnOverlayView\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB8uwCpGazZQ4JvdwNQP9Jt0GH0FukWd-M&v=3.exp&libraries=geometry,drawing,places\"\n      loadingElement={<div style={{ height: `100%` }} />}\n      containerElement={<div style={{ height: `400px` }} />}\n      mapElement={<div style={{ height: `100%` }} />}\n    />\n  }\n}\n\nexport default MapWithOverlay;\n\n"]},"metadata":{},"sourceType":"module"}