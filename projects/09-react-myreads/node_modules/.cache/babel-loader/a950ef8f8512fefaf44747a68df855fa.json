{"ast":null,"code":"import _classCallCheck from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/src/SearchBooks.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from \"./utils/BooksAPI\";\nimport BookShelfChanger from \"./BookShelfChanger\";\n\nvar SearchBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBooks, _Component);\n\n  function SearchBooks(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBooks);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBooks).call(this, props));\n\n    _this.updateQuery = function (query) {\n      var editedQuery = query.trim();\n\n      _this.setState({\n        query: editedQuery // library: this.searchApi(editedQuery)\n\n      });\n\n      _this.searchApi(_this.state.query);\n    };\n\n    _this.searchApi = function (query) {\n      BooksAPI.search(query).then(function (library) {\n        _this.setState({\n          library: library\n        });\n      });\n    };\n\n    _this.state = {\n      query: \"\",\n      library: []\n    };\n    return _this;\n  } // Function to be used in onChange in HTML input field.\n\n\n  _createClass(SearchBooks, [{\n    key: \"addBook\",\n    value: function addBook(book, shelf) {// TODO: write method to add to books\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          query = _this$state.query,\n          library = _this$state.library;\n      console.log(library);\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.updateQuery(event.target.value);\n        } // onChange={(event) => this.searchApi(event.target.value)}\n        ,\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, // Building a list:\n      library && library.length > 0 && library.map(function (book) {\n        return book.imageLinks.smallThumbnail && React.createElement(\"li\", {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: \"url(\".concat(book.imageLinks.smallThumbnail, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(BookShelfChanger, {\n          currentShelf: \"none\",\n          onUpdateBook: function onUpdateBook(shelf) {\n            _this2.addBook(book, shelf);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"book-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, book.title), React.createElement(\"div\", {\n          className: \"book-authors\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, book.authors && book.authors.join(\", \"))));\n      }))));\n    }\n  }]);\n\n  return SearchBooks;\n}(Component);\n\nexport default SearchBooks;","map":{"version":3,"sources":["/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/src/SearchBooks.js"],"names":["React","Component","Link","BooksAPI","BookShelfChanger","SearchBooks","props","updateQuery","query","editedQuery","trim","setState","searchApi","state","search","then","library","book","shelf","console","log","event","target","value","length","map","imageLinks","smallThumbnail","id","width","height","backgroundImage","addBook","title","authors","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from \"./utils/BooksAPI\";\nimport BookShelfChanger from \"./BookShelfChanger\";\n\n\nclass SearchBooks extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      library: []\n    }\n  }\n\n  // Function to be used in onChange in HTML input field.\n  updateQuery = (query) => {\n    let editedQuery = query.trim();\n    this.setState({\n      query: editedQuery,\n      // library: this.searchApi(editedQuery)\n    });\n    this.searchApi(this.state.query);\n  };\n\n  searchApi = (query) => {\n    BooksAPI.search(query).then(\n      library => {\n        this.setState({\n          library: library\n        })\n      }\n    );\n  };\n\n  addBook(book, shelf){\n    // TODO: write method to add to books\n  }\n\n  render(){\n\n    const { query, library } = this.state;\n    console.log(library);\n\n    return <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        {/*<button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>*/}\n        <Link to=\"/\" className=\"close-search\"/>\n        <div className=\"search-books-input-wrapper\">\n          {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(event) => this.updateQuery(event.target.value)}\n            // onChange={(event) => this.searchApi(event.target.value)}\n            placeholder=\"Search by title or author\"/>\n\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          { // Building a list:\n            (library && library.length > 0 && (library.map(book => (book.imageLinks.smallThumbnail &&\n              <li key={book.id}>\n                <div className=\"book\">\n                  <div className=\"book-top\">\n                    <div className=\"book-cover\"\n                         style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.smallThumbnail})`}}>\n                      <BookShelfChanger\n                      currentShelf={\"none\"}\n                      onUpdateBook={(shelf) => { this.addBook(book, shelf); }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"book-title\">{book.title}</div>\n                  <div className=\"book-authors\">{\n                    (book.authors) && book.authors.join(\", \")\n                  }</div>\n                </div>\n              </li>\n            ))))\n          }\n        </ol>\n      </div>\n    </div>\n  }\n}\n\nexport default SearchBooks;"]},"metadata":{},"sourceType":"module"}