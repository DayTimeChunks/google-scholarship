{"ast":null,"code":"import _classCallCheck from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/src/SearchBooks.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from \"./utils/BooksAPI\";\nimport escapeRegExp from 'escape-string-regexp';\n\nvar SearchBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBooks, _Component);\n\n  function SearchBooks(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBooks);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBooks).call(this, props));\n\n    _this.updateQuery = function (query) {\n      _this.setState({\n        query: query.trim()\n      });\n\n      _this.searchApi(_this.state.query);\n    };\n\n    _this.searchApi = function (query) {\n      BooksAPI.search(query).then(function (library) {\n        _this.setState({\n          library: library\n        });\n      });\n    };\n\n    _this.state = {\n      query: \"\",\n      library: []\n    };\n    return _this;\n  } // Function to be used in onChange in HTML input field.\n\n\n  _createClass(SearchBooks, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          query = _this$state.query,\n          library = _this$state.library; // Use the search method to\n      // Filter query section\n      // let showingBooks;\n      // if (this.state.query){\n      //   const match = new RegExp(escapeRegExp(this.state.query), 'i');\n      //   showingBooks = this.state.library.filter( book => match.test(book.name));\n      // }\n      // console.log(this.state.library);\n\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.updateQuery(event.target.value);\n        },\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchBooks;\n}(Component);\n\nexport default SearchBooks;","map":{"version":3,"sources":["/Users/DayTightChunks/Documents/eCourses/WebDev/FE-Nanodegree/React-apps/myreads/src/SearchBooks.js"],"names":["React","Component","Link","BooksAPI","escapeRegExp","SearchBooks","props","updateQuery","query","setState","trim","searchApi","state","search","then","library","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;IAGMC,W;;;;;AAEJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UASnBC,WATmB,GASL,UAACC,KAAD,EAAW;AACvB,YAAKC,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAEA,KAAK,CAACE,IAAN;AADK,OAAd;;AAGA,YAAKC,SAAL,CAAe,MAAKC,KAAL,CAAWJ,KAA1B;AACD,KAdkB;;AAAA,UAgBnBG,SAhBmB,GAgBP,UAACH,KAAD,EAAW;AACrBL,MAAAA,QAAQ,CAACU,MAAT,CAAgBL,KAAhB,EAAuBM,IAAvB,CACE,UAAAC,OAAO,EAAI;AACT,cAAKN,QAAL,CAAc;AAACM,UAAAA,OAAO,EAAEA;AAAV,SAAd;AACD,OAHH;AAKD,KAtBkB;;AAEjB,UAAKH,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXO,MAAAA,OAAO,EAAE;AAFE,KAAb;AAFiB;AAMlB,G,CAED;;;;;6BAgBQ;AAAA;;AAAA,wBACqB,KAAKH,KAD1B;AAAA,UACEJ,KADF,eACEA,KADF;AAAA,UACSO,OADT,eACSA,OADT,EAGN;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAO;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEP,KAFT;AAGE,QAAA,QAAQ,EAAE,kBAACQ,KAAD;AAAA,iBAAW,MAAI,CAACT,WAAL,CAAiBS,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAX;AAAA,SAHZ;AAIE,QAAA,WAAW,EAAC,2BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAHF,CADK,EAqBL;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CArBK,CAAP;AA4BD;;;;EAnEuBjB,S;;AAsE1B,eAAeI,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from \"./utils/BooksAPI\";\nimport escapeRegExp from 'escape-string-regexp'\n\n\nclass SearchBooks extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      library: []\n    }\n  }\n\n  // Function to be used in onChange in HTML input field.\n  updateQuery = (query) => {\n    this.setState({\n      query: query.trim()\n    });\n    this.searchApi(this.state.query);\n  };\n\n  searchApi = (query) => {\n    BooksAPI.search(query).then(\n      library => {\n        this.setState({library: library})\n      }\n    )\n  };\n\n  render(){\n    const { query, library } = this.state;\n\n    // Use the search method to\n\n    // Filter query section\n    // let showingBooks;\n    // if (this.state.query){\n    //   const match = new RegExp(escapeRegExp(this.state.query), 'i');\n    //   showingBooks = this.state.library.filter( book => match.test(book.name));\n    // }\n    // console.log(this.state.library);\n\n    return <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        {/*<button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>*/}\n        <Link to=\"/\" className=\"close-search\"/>\n        <div className=\"search-books-input-wrapper\">\n          {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(event) => this.updateQuery(event.target.value)}\n            placeholder=\"Search by title or author\"/>\n\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          {/* Build a list */}\n\n        </ol>\n      </div>\n    </div>\n  }\n}\n\nexport default SearchBooks;"]},"metadata":{},"sourceType":"module"}